# Novnc desktop in browser
FROM dorowu/ubuntu-desktop-lxde-vnc:focal


RUN apt-get update && apt upgrade -y
RUN apt-get -y install \
    libjansson-dev \
    nodejs \
    npm \
    nodejs \
    libnode64 \
    libboost-dev \
    libtinyxml-dev \
    mercurial \
    cmake \
    build-essential \
    git

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update \
&&  apt-get -y install locales curl gnupg2 lsb-release wget git \
&&  locale-gen en_GB en_GB.UTF-8 \
&&  update-locale LC_ALL=en_GB.UTF-8 LANG=en_GB.UTF-8 \
&&  export LANG=en_GB.UTF-8 \
&&  curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - \
&& sh -c 'echo "deb http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list'

ENV LANG en_GB.UTF-8

RUN apt-get update
RUN apt-get -y install ros-foxy-desktop ros-foxy-navigation2 ros-foxy-nav2-bringup

RUN apt-get -y install pkg-config
RUN apt-get -y install gazebo11 libgazebo11-dev
RUN apt-get -y install vim wget subversion gdb
#RUN apt-get update
RUN apt-get -y install imagemagick
RUN apt-get -y install python
RUN apt-get -y install ros-foxy-rcpputils
RUN apt-get -y install ros-foxy-control-msgs ros-foxy-realtime-tools
RUN apt-get -y install ros-foxy-gazebo-ros ros-foxy-gazebo-plugins
RUN apt-get -y install ros-foxy-gazebo-ros-pkgs ros-foxy-xacro
RUN apt-get -y install ros-robot-state-publisher ros-foxy-angles

RUN apt-get -y install ros-foxy-teleop-twist-keyboard
RUN apt-get -y install ros-foxy-rviz2
RUN apt-get -y install ros-foxy-test-msgs 
RUN apt-get -y install python3-argcomplete python3-vcstool python3-rosdep \
        python3-colcon-common-extensions python3-pip
RUN apt-get -y install psmisc
RUN rm -rf /var/lib/apt/lists/*

RUN apt-get update && apt-get install -y \
    google-mock \
	libceres-dev \
	liblua5.3-dev \
	libboost-dev \
	libboost-iostreams-dev \
	libprotobuf-dev \
	protobuf-compiler \
	libcairo2-dev \
	libpcl-dev \
	python3-sphinx \
&&  rm -rf /var/lib/apt/lists/*


# Make user
ARG UID
ARG GID
ENV SHELL=/bin/bash
RUN bash -c 'if [[ ${ostype} == Linux ]] ; then addgroup --gid ${GID} user ; fi'
RUN adduser --gecos '' --disabled-password --uid $UID --gid $GID dots \
&&  adduser dots sudo \
&&  echo "dots ALL=(ALL_ NOPASSWD:ALL" >> /etc/sudoers.d/nopasswd

# Fetch and build the aruco library
RUN git clone https://siteks@bitbucket.org/siteks/aruco-3.0.0.git
RUN mkdir -p aruco-3.0.0/build
WORKDIR aruco-3.0.0/build
RUN cmake -DCMAKE_BUILD_TYPE=Release ..
RUN make
RUN make install

# Install code-server
WORKDIR /root    
RUN mkdir -p code_server
WORKDIR code_server
RUN curl -fOL https://github.com/cdr/code-server/releases/download/v3.9.2/code-server_3.9.2_amd64.deb \
&&  dpkg -i code-server_3.9.2_amd64.deb

RUN echo "[program:codeserver]" >> /etc/supervisor/conf.d/codeserver.conf \
&&  echo "user=dots" >> /etc/supervisor/conf.d/codeserver.conf \
&&  echo "command=/usr/bin/code-server --host 0.0.0.0 --auth none --disable-telemetry" >> /etc/supervisor/conf.d/codeserver.conf

USER dots
WORKDIR /home/dots
ENV HOME=$WORKDIR

# Fetch the gazebo model database
RUN mkdir -p .gazebo
RUN git clone --depth 1 https://github.com/osrf/gazebo_models.git .gazebo/models
RUN rm -rf .gazebo/models/.git


RUN wget https://github.com/microsoft/vscode-cpptools/releases/download/1.2.2/cpptools-linux.vsix \
&&  wget https://github.com/microsoft/vscode-python/releases/download/2021.2.636928669/ms-python-release.vsix \
&&  code-server --verbose --install-extension cpptools-linux.vsix \
&&  code-server --verbose --install-extension ms-python-release.vsix \
&&  rm cpptools-linux.vsix ms-python-release.vsix \
&&  code-server --install-extension twxs.cmake \
&&  /usr/bin/python3 -m pip install -U autopep8 flake8 --user

COPY ./scripts/vscode-ros-dev-vsix.zip ./
RUN unzip vscode-ros-dev-vsix.zip
RUN code-server --install-extension vscode-ros-dev.vsix 
RUN rm vscode-ros-dev*

COPY ./scripts/coder.json .local/share/code-server/
COPY ./scripts/settings.json .local/share/code-server/User/


RUN echo "source /opt/ros/foxy/setup.bash" >> ~/.bashrc
RUN echo "export DISPLAY=:1" >> ~/.bashrc


# Start the servers
USER root
ENV USER=dots
ENTRYPOINT ["/startup.sh"]




